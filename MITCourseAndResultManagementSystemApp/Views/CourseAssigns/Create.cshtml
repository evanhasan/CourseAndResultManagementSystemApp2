@model MITCourseAndResultManagementSystemApp.Models.CourseAssign

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/MasterPageLayout.cshtml";
    if (ViewBag.Message == null)
    {
        ViewBag.Message = null;
    }
}

<h4 style="margin-left: 200px;"> Assign Course</h4>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.DepartmentId, "DepartmentId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("DepartmentId", null, "Select..", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DepartmentId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.BatchId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("BatchId", Enumerable.Empty<SelectListItem>(), "Select..", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BatchId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.TeacherId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TeacherId", Enumerable.Empty<SelectListItem>(), "Select..", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TeacherId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("CreditTaken", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Editor("CreditTaken", new { htmlAttributes = new { @class = "form-control",  @readonly = true  }})
                @Html.ValidationMessage("CreditTaken", "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.Label("CreditRemain", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Editor("CreditRemain", new { htmlAttributes = new { @class = "form-control",  @readonly = true} })
                @Html.ValidationMessage("CreditRemain", "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CourseId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CourseId", Enumerable.Empty<SelectListItem>(), "Select..", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CourseId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Credit, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               @Html.EditorFor(model => model.Credit, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                @Html.ValidationMessageFor(model => model.Credit, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">@ViewBag.Message
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<script src="~/Scripts/bootstrap.min.js"></script>

<script>
    $("#DepartmentId").change(function () {
        var DepartmentId = $("#DepartmentId").val();
        if (DepartmentId > 0) {
            $.ajax({
                url: '@Url.Action("GetBatchList", "CourseAssigns")',
                data: { DepartmentId: DepartmentId },
                success: function (result) {
                    var Options = "<Option value=' '>Select..</Option>";
                    for (var i = 0; i < result.length; i++) {
                        Options = Options + "<Option value='"+result[i]['Id']+"'>" + result[i]['BatchNo'] + "</Option>";
                    }
                    $("#BatchId").empty();
                    $("#BatchId").append(Options);
                }
            });

        }

    });
</script>

<script>
    $("#DepartmentId").change(function () {
        var DepartmentId = $("#DepartmentId").val();
        if (DepartmentId > 0) {
            $.ajax({
                url: '@Url.Action("GetCourseList", "CourseAssigns")',
                data: { DepartmentId: DepartmentId },
                success: function (result) {
                    var Options = "<Option value=' '>Select..</Option>";
                    for (var i = 0; i < result.length; i++) {
                        Options = Options + "<Option value='"+result[i]['Id']+"'>" + result[i]['CourseName'] + "</Option>";
                    }
                    $("#CourseId").empty();
                    $("#CourseId").append(Options);
                }
            });
        }
    });

</script>
@*/Teacher Name/*@
<script>
    $("#DepartmentId").change(function () {
        var DepartmentId = $("#DepartmentId").val();
        if (DepartmentId > 0) {
            $.ajax({
                url: '@Url.Action("GetTeacherList", "CourseAssigns")',
                data: { DepartmentId: DepartmentId },
                success: function (result) {
                    var Options = "<Option value=' '>Select..</Option>";
                    for (var i = 0; i < result.length; i++) {
                        Options = Options + "<Option value='"+result[i]['Id']+"'>" + result[i]['TeacherName'] + "</Option>";
                    }
                    $("#TeacherId").empty();
                    $("#TeacherId").append(Options);
                }
            });
        }
    });

</script>

@* Credit Taken *@
<script>
    $("#TeacherId").change(function () {
        var TeacherId = $("#TeacherId").val();
        if (TeacherId > 0) {
            $.ajax({
                url: '@Url.Action("GetTeacherCredit", "CourseAssigns")',
                data: { TeacherId: TeacherId },
                success: function (result) {

                    $("#CreditTaken").empty();
                    $("#CreditTaken").val(result);
                }
            });
        }
    });

</script>

@* Credit Taken *@
<script>
    $("#TeacherId").change(function () {
        var TeacherId = $("#TeacherId").val();
        if (TeacherId > 0) {
            $.ajax({
                url: '@Url.Action("GetTeacherCreditRamain", "CourseAssigns")',
                data: { TeacherId: TeacherId },
                success: function (result) {

                    $("#CreditRemain").empty();
                    $("#CreditRemain").val(result);
                }
            });
        }
    });

</script>

<script>
    $("#CourseId").change(function () {
        var CourseId = $("#CourseId").val();
        if (CourseId > 0) {
            $.ajax({
                url: '@Url.Action("GetCourseCredit", "CourseAssigns")',
                data: { CourseId: CourseId },
                success: function (result) {
                  
                    $("#Credit").empty();
                    $("#Credit").val(result);
                    @* alert *@
                    var Credit = parseFloat(result);
                    var CreditRemain = parseFloat($("#CreditRemain").val());

                    if (CreditRemain < Credit) {
                        alert("Credit Limit will be Exceed: Credit remain "+CreditRemain+" , Selected Course credit is:  "+Credit);
                    } 
                }
            });
        } 
    });

</script>


